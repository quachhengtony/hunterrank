// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

enum QuestStatus {
  ACTIVE
  COMPLETED
  FROZE
}

enum Level {
  F
  E
  D
  C
  B
  A
  A_PLUS
  A_PLUS_PLUS
}

enum Rank {
  COPPER
  IRON
  SILVER
  GOLD
  PLATINUM
  MITHRIL
  ORICHALCUM
  ADAMANTITE
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  hash      String
  rank      Rank     @default(COPPER)
  exp       Int      @default(0)
  coin      Int      @default(0)
  firstName String?
  lastName  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  requests Quest[]

  accepts HuntersQuests[]

  profile Profile?

  notifications Notification[]

  @@map("tblUsers")
}

model Profile {
  id        String   @id @default(uuid())
  picture   String?
  username  String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique

  @@map("tblProfiles")
}

model Quest {
  id              String      @id @default(uuid())
  title           String
  description     String
  reward          Int         @default(0)
  difficultyLevel Level
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  location        String
  startAt         DateTime
  endAt           DateTime
  status          QuestStatus

  customer   User   @relation(fields: [customerId], references: [id], onDelete: Cascade)
  customerId String

  hunters HuntersQuests[]

  @@map("tblQuests")
}

model HuntersQuests {
  id      String @id @default(uuid())
  user    User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  quest   Quest  @relation(fields: [questId], references: [id], onDelete: Cascade)
  userId  String
  questId String

  @@map("tblHuntersQuests")
}

model Notification {
  id        String   @id @default(uuid())
  title     String
  url       String
  createdAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id])
  userId String
  @@map("tblNotifications")
}
